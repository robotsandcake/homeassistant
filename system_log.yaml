# System Log #


## The system_log integration stores information about all logged errors and warnings in Home Assistant. To view your logs, navigate to Configuration -> Logs. In order to not overload Home Assistant with log data, only the 50 last errors and warnings will be stored. Older entries are automatically discarded from the log. It is possible to change the number of stored log entries using the parameter max_entries. https://www.home-assistant.io/integrations/system_log/ ##

system_log:
  max_entries: 100
# Using counter to count errors as caught by Home Assistant, you need to add fire_event: `true` to your configuration.yaml, like so:
  fire_event: true

#COUNTING NUMBER OF WARNINGS
##This will create a counter that increases every time a warning is logged:

counter:
  warning_counter:
    name: Warnings
    icon: mdi:alert

automation:
  - alias: Count warnings
    trigger:
      platform: event
      event_type: system_log_event
      event_data:
        level: WARNING
    action:
      service: counter.increment
      entity_id: counter.warning_counter


## This automation will create a persistent notification whenever an error or warning is logged that has the word “service” in the message:


  - alias: Create notifications for "service" errors
    trigger:
      platform: event
      event_type: system_log_event
    condition:
      condition: template
      value_template: '{{ "service" in trigger.event.data.message }}'
    action:
      service: persistent_notification.create
      data:
        title: We had a boo-boo
        message: '{{ trigger.event.data.message }}'


## This automation will create a new log entry when the basement windows is opened:

  - alias: Log Basement Window Opened
    trigger:
      platform: state
      entity_id: binary_sensor.basement_window_sensor
      from: 'off'
      to: 'on'
    action:
      service: system_log.write
      data:
        message: 'Basement Window Opened!'
        level: info